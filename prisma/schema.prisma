// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(uuid())
  phone     String   @unique
  username  String
  photo     String?
  videos    Video[]
  adminEvents Event[] @relation("AdminRelation")
  eventParticipants EventParticipant[]
}


model Video {
  id            String   @id @default(uuid())
  storagePath   String
  thumbnailPath String?
  createdAt     DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  event         Event?    @relation(fields: [eventId], references: [id])
  eventId       String?
  status        String   @default("pending") // "pending" | "published"
}

model Event {
  id          String   @id @default(uuid())
  name        String?
  information String?
  date        DateTime
  createdAt   DateTime @default(now())
  location    String?
  photo       String?

  admin       User     @relation("AdminRelation", fields: [adminId], references: [id])
  adminId     String


  participants EventParticipant[]

  videos      Video[]
}

model EventParticipant {
  id        String   @id @default(uuid())
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  joinedAt  DateTime @default(now())

  @@unique([userId, eventId], name: "userId_eventId")
}
